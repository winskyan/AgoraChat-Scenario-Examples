apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    // Read local.properties
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
    properties.load(inputStream)

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "io.agora.e3kitdemo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 101
        versionName "1.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "E3KIT_APP_SERVER", "\"https://a41.easemob.com\"")
        buildConfigField("String", "APP_SERVER_PROTOCOL", "\"https\"")
        buildConfigField("String", "APP_SERVER_DOMAIN", "\"a41.easemob.com\"")
        buildConfigField("String", "APP_SERVER_URL", "\"/app/chat/user/login\"")
        buildConfigField("String", "APP_SERVER_REGISTER", "\"/app/chat/user/register\"")
        manifestPlaceholders = [AGORA_CHAT_APPKEY: properties.getProperty("AGORA_CHAT_APPKEY", "******")]
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "e3kit_demo_v${defaultConfig.versionName}_${buildType.name}_${releaseTime()}.apk"
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("CTT"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.virgilsecurity:ethree:2.0.10'
    implementation 'io.agora.rtc:chat-sdk:1.0.6'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
}
